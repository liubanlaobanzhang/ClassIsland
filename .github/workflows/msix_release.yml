name: Build and Package MSIX

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: 'classisland.sln'
  PACKAGE_PROJECT: 'classisland\YourApp.Package.wapproj'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_FILE }}

    - name: PreSet Environment
      run: pwsh -ep bypass ./build.ps1
      
    - name: Build solution
      run: |
        msbuild ${{ env.SOLUTION_FILE }} `
          /p:Configuration=Release `
          /p:Platform=x64 `
          /p:AppxBundle=Always `
          /p:AppxBundlePlatforms="x64" `
          /p:UapAppxPackageBuildMode=StoreUpload `
          /p:AppxPackageDir=AppxPackages\ `
          /p:GenerateAppxPackageOnBuild=true
          
    - name: Find MSIX package
      id: find-msix
      run: |
        $msixFile = Get-ChildItem -Path . -Recurse -Filter "*.msix" | Select-Object -First 1
        if ($msixFile) {
          echo "MSIX_PATH=$($msixFile.FullName)" >> $env:GITHUB_ENV
          echo "MSIX_NAME=$($msixFile.Name)" >> $env:GITHUB_ENV
          echo "Found MSIX: $($msixFile.FullName)"
        } else {
          Write-Error "MSIX package not found"
        }
        
    - name: Upload MSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: msix-package
        path: ${{ env.MSIX_PATH }}
        retention-days: 30